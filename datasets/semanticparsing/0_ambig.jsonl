{"surface": "Watson spotted Alan with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Alan", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the man saw the woman with the camera", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND camera(z) AND instrument(a, z) AND man(x) AND patient(a, y) AND saw(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl grabbed the woman with the gloves", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND gloves(z) AND grabbed(a) AND instrument(a, z) AND patient(a, y) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary observed the man with the camera", "lf": "exists x . exists y . exists a . agent(a, Mary) AND camera(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "man", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele observed Ada with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Ada)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl spotted Sherlock with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND instrument(a, y) AND patient(a, Sherlock) AND spotted(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary observed the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Mary) AND binoculars(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan spotted Bill with the camera", "lf": "exists x . exists a . agent(a, Alan) AND camera(x) AND instrument(a, x) AND patient(a, Bill) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "Bill", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spotted the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Bill with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan picked up the girl with the gloves", "lf": "exists x . exists y . exists a . agent(a, Alan) AND girl(x) AND gloves(y) AND instrument(a, y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "picked_up", "np2": "girl", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan observed Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Alan) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman lifted the girl with the ovenmitts", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(y) AND instrument(a, z) AND lifted(a) AND ovenmitts(z) AND patient(a, y) AND woman(x)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "girl", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw Watson with the binoculars", "lf": "exists x . exists a . agent(a, Mary) AND binoculars(x) AND instrument(a, x) AND patient(a, Watson) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Watson", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo picked up the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND boy(x) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "picked_up", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine picked up the man with the mittens", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND instrument(a, y) AND man(x) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "picked_up", "np2": "man", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Mary with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Mary) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Mary", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw Sherlock with the telescope", "lf": "exists x . exists a . agent(a, Mary) AND instrument(a, x) AND patient(a, Sherlock) AND saw(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw the man with the telescope", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND instrument(a, z) AND man(y) AND patient(a, y) AND saw(a) AND telescope(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted Adele with the spyglass", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND patient(a, Adele) AND spotted(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Adele", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy spotted Sherlock with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND boy(x) AND instrument(a, y) AND patient(a, Sherlock) AND spotted(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan saw the man with the telescope", "lf": "exists x . exists y . exists a . agent(a, Alan) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the man spied Alan with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND man(x) AND patient(a, Alan) AND spied(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "spied", "np2": "Alan", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Mary with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Mary)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Mary", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Katherine with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine spied Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Katherine) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spotted Ada with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson observed Alan with the telescope", "lf": "exists x . exists a . agent(a, Watson) AND instrument(a, x) AND observed(a) AND patient(a, Alan) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Alan", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary spied Sherlock with the telescope", "lf": "exists x . exists a . agent(a, Mary) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo held the boy with the gloves", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND boy(x) AND gloves(y) AND held(a) AND instrument(a, y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "held", "np2": "boy", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill picked up the man with the gloves", "lf": "exists x . exists y . exists a . agent(a, Bill) AND gloves(y) AND instrument(a, y) AND man(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "picked_up", "np2": "man", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Mary with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND patient(a, Mary) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Mary", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spotted Katherine with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Katherine", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo saw the girl with the camera", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND camera(y) AND girl(x) AND instrument(a, y) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "girl", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan spied Mary with the spyglass", "lf": "exists x . exists a . agent(a, Alan) AND instrument(a, x) AND patient(a, Mary) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "spied", "np2": "Mary", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied the woman with the camera", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Alan with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Alan", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw the man with the spyglass", "lf": "exists x . exists y . exists a . agent(a, Mary) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "man", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan saw the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Alan) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND saw(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spied Katherine with the camera", "lf": "exists x . exists a . agent(a, Ada) AND camera(x) AND instrument(a, x) AND patient(a, Katherine) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spied", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl held the man with the ovenmitts", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND held(a) AND instrument(a, z) AND man(y) AND ovenmitts(z) AND patient(a, y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "man", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Katherine) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada picked up the man with the mittens", "lf": "exists x . exists y . exists a . agent(a, Ada) AND instrument(a, y) AND man(x) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "picked_up", "np2": "man", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Bill with the spyglass", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Bill) AND spied(a) AND spyglass(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Bill", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied Watson with the binoculars", "lf": "exists x . exists a . agent(a, Galileo) AND binoculars(x) AND instrument(a, x) AND patient(a, Watson) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Watson", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw Adele with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Adele) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson picked up the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Watson) AND girl(x) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson saw Galileo with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Galileo) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "Galileo", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Adele with the telescope", "lf": "exists x . exists a . agent(a, Bill) AND instrument(a, x) AND patient(a, Adele) AND spied(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy saw Bill with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND boy(x) AND instrument(a, y) AND patient(a, Bill) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spied Marie with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Marie) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spied", "np2": "Marie", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spotted the boy with the spyglass", "lf": "exists x . exists y . exists a . agent(a, Ada) AND boy(x) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "boy", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman observed Sherlock with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND instrument(a, y) AND observed(a) AND patient(a, Sherlock) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill grabbed the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Bill) AND boy(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "grabbed", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy spied the man with the telescope", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND boy(x) AND instrument(a, z) AND man(y) AND patient(a, y) AND spied(a) AND telescope(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spotted Adele with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Adele) AND spotted(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele held the man with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Adele) AND held(a) AND instrument(a, y) AND man(x) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "held", "np2": "man", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada grabbed the boy with the mittens", "lf": "exists x . exists y . exists a . agent(a, Ada) AND boy(x) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "grabbed", "np2": "boy", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock observed Ada with the spyglass", "lf": "exists x . exists a . agent(a, Sherlock) AND instrument(a, x) AND observed(a) AND patient(a, Ada) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Ada", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Mary with the telescope", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND observed(a) AND patient(a, Mary) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Mary", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Mary with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Mary) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Mary", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied the boy with the camera", "lf": "exists x . exists y . exists a . agent(a, Bill) AND boy(x) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "boy", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman picked up the girl with the mittens", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(y) AND instrument(a, z) AND mittens(z) AND patient(a, y) AND picked_up(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw Mary with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Mary) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "Mary", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the man spotted Katherine with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND man(x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman saw Watson with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Watson) AND saw(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "Watson", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy saw Alan with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND boy(x) AND camera(y) AND instrument(a, y) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "Alan", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan observed the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Alan) AND binoculars(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spotted the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary spied Bill with the binoculars", "lf": "exists x . exists a . agent(a, Mary) AND binoculars(x) AND instrument(a, x) AND patient(a, Bill) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie grabbed the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Marie) AND boy(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "grabbed", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock spotted the girl with the telescope", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "girl", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted Katherine with the telescope", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Katherine", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl spotted Ada with the spyglass", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Ada) AND spotted(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Ada", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spied the woman with the camera", "lf": "exists x . exists y . exists a . agent(a, Adele) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Galileo with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Galileo) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Galileo", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the man picked up the woman with the gloves", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND gloves(z) AND instrument(a, z) AND man(x) AND patient(a, y) AND picked_up(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "picked_up", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Marie) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo saw Bill with the spyglass", "lf": "exists x . exists a . agent(a, Galileo) AND instrument(a, x) AND patient(a, Bill) AND saw(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Bill", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock saw Adele with the spyglass", "lf": "exists x . exists a . agent(a, Sherlock) AND instrument(a, x) AND patient(a, Adele) AND saw(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Adele", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Galileo with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Galileo) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Galileo", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spotted Katherine with the binoculars", "lf": "exists x . exists a . agent(a, Ada) AND binoculars(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "Katherine", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the man observed the boy with the spyglass", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND boy(y) AND instrument(a, z) AND man(x) AND observed(a) AND patient(a, y) AND spyglass(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "boy", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Ada with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Ada) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Ada", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock picked up the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada saw the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Ada) AND binoculars(y) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "saw", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Ada with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND instrument(a, y) AND patient(a, Ada) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill grabbed the woman with the mittens", "lf": "exists x . exists y . exists a . agent(a, Bill) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "grabbed", "np2": "woman", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie lifted the woman with the gloves", "lf": "exists x . exists y . exists a . agent(a, Marie) AND gloves(y) AND instrument(a, y) AND lifted(a) AND patient(a, x) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "lifted", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock grabbed the girl with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "grabbed", "np2": "girl", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Marie with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Marie) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Marie", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spied Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Adele) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill saw Adele with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "saw", "np2": "Adele", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele lifted the man with the gloves", "lf": "exists x . exists y . exists a . agent(a, Adele) AND gloves(y) AND instrument(a, y) AND lifted(a) AND man(x) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "lifted", "np2": "man", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine grabbed the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND girl(x) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "grabbed", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the man left and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "left", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the man slept and played or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND left(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "slept", "vp2": "played", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank and played or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND slept(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "played", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the man ate and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND drew(e) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "ate", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl walked and moved or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(e) AND walked(a) ) OR ( agent(i, x) AND ate(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "walked", "vp2": "moved", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played or left and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND left(e) ) OR ( agent(a, x) AND played(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "left", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant drank or played and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(e) AND walked(i) ) OR ( agent(a, x) AND drank(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "drank", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept and played or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND walked(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman moved and slept or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(a) AND slept(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "moved", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept and ate or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND slept(a) ) OR ( agent(i, x) AND napped(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "ate", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat slept or moved and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND walked(i) ) OR ( agent(a, x) AND slept(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "slept", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept or napped and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND napped(e) ) OR ( agent(a, x) AND slept(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked and played or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND walked(a) ) OR ( agent(i, x) AND drew(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "played", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped and slept or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(a) AND slept(e) ) OR ( agent(i, x) AND drank(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "slept", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked or napped and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(e) AND played(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "napped", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew and moved or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND moved(e) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or left and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND slept(i) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy ate or played and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(e) AND walked(i) ) OR ( agent(a, x) AND ate(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "ate", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped and drank or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND napped(a) ) OR ( agent(i, x) AND ate(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "drank", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy left and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "left", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked and drank or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND walked(a) ) OR ( agent(i, x) AND napped(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "drank", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played and napped or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(e) AND played(a) ) OR ( agent(i, x) AND slept(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "napped", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant played or moved and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND walked(i) ) OR ( agent(a, x) AND played(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "played", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird slept and played or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND drew(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "slept", "vp2": "played", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl walked and played or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND walked(a) ) OR ( agent(i, x) AND drank(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "walked", "vp2": "played", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish ate or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND ate(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "ate", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played and walked or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND walked(e) ) OR ( agent(i, x) AND slept(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "walked", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the man left or drew and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND walked(i) ) OR ( agent(a, x) AND left(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "left", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow moved and left or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND left(e) AND moved(a) ) OR ( agent(i, x) AND slept(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "moved", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drank or drew and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND moved(i) ) OR ( agent(a, x) AND drank(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drank", "vp2": "drew", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked or moved and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND napped(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "moved", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish slept or napped and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND napped(e) ) OR ( agent(a, x) AND slept(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "slept", "vp2": "napped", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird drank and left or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND left(e) ) OR ( agent(i, x) AND drew(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "drank", "vp2": "left", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played or left and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND left(e) ) OR ( agent(a, x) AND played(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "left", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or moved and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND moved(e) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "moved", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the man drew and slept or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND slept(e) ) OR ( agent(i, x) AND drank(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "drew", "vp2": "slept", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the man moved or drank and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND drew(i) ) OR ( agent(a, x) AND moved(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "moved", "vp2": "drank", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish left and drew or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND slept(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "left", "vp2": "drew", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drew or slept and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND slept(e) ) OR ( agent(a, x) AND drew(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drew", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the man ate and slept or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND slept(e) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "ate", "vp2": "slept", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy slept or played and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND played(e) ) OR ( agent(a, x) AND slept(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "slept", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird played and napped or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(e) AND played(a) ) OR ( agent(i, x) AND drank(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "played", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or slept and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND slept(e) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "slept", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish slept or drank and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND drank(e) ) OR ( agent(a, x) AND slept(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "slept", "vp2": "drank", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played and slept or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or left and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND napped(i) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "left", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked and moved or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(e) AND walked(a) ) OR ( agent(i, x) AND left(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked and drank or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND walked(a) ) OR ( agent(i, x) AND left(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "drank", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew and played or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND played(e) ) OR ( agent(i, x) AND drank(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "played", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant moved and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND moved(a) ) OR ( agent(i, x) AND drew(i) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "moved", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the man walked or played and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND played(e) ) OR ( agent(a, x) AND walked(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "walked", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or drew and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND played(i) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "drew", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy napped or ate and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND drank(i) ) OR ( agent(a, x) AND napped(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "napped", "vp2": "ate", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl drew or moved and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND moved(e) ) OR ( agent(a, x) AND drew(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "drew", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played and drew or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND played(a) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow left and drank or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "left", "vp2": "drank", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank and played or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND moved(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl napped and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND napped(a) ) OR ( agent(i, x) AND drew(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "napped", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy napped or drank and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND played(i) ) OR ( agent(a, x) AND napped(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "napped", "vp2": "drank", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank and drew or played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND drew(e) ) OR ( agent(i, x) AND played(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "drew", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank or moved and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND moved(e) ) OR ( agent(a, x) AND drank(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or napped and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(e) AND played(i) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "napped", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow slept or left and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND played(i) ) OR ( agent(a, x) AND slept(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "slept", "vp2": "left", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew or moved and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND napped(i) ) OR ( agent(a, x) AND drew(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "moved", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl left or ate and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND walked(i) ) OR ( agent(a, x) AND left(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "left", "vp2": "ate", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy left or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND left(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "left", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or walked and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(i) AND walked(e) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "walked", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played or drew and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND moved(i) ) OR ( agent(a, x) AND played(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "drew", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird drank and played or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND left(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "drank", "vp2": "played", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy slept or drank and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND moved(i) ) OR ( agent(a, x) AND slept(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "slept", "vp2": "drank", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked and ate or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND walked(a) ) OR ( agent(i, x) AND drank(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "ate", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drew or left and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND napped(i) ) OR ( agent(a, x) AND drew(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drew", "vp2": "left", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or walked and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND walked(e) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow slept and played or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND moved(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "slept", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the man drew and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "drew", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog ate and left or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND left(e) ) OR ( agent(i, x) AND moved(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "ate", "vp2": "left", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow ate and drew or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND drew(e) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "ate", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped or moved and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND slept(i) ) OR ( agent(a, x) AND napped(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "moved", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or slept and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND slept(e) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "slept", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant slept or walked and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND walked(e) ) OR ( agent(a, x) AND slept(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "slept", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played and walked or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND walked(e) ) OR ( agent(i, x) AND ate(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "walked", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman drank or walked and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND walked(e) ) OR ( agent(a, x) AND drank(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "drank", "vp2": "walked", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat napped or ate and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND left(i) ) OR ( agent(a, x) AND napped(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "napped", "vp2": "ate", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked or played and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND played(e) ) OR ( agent(a, x) AND walked(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "played", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl moved and walked or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(a) AND walked(e) ) OR ( agent(i, x) AND drew(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "moved", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman drank and played or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "drank", "vp2": "played", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird slept or left and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND left(e) ) OR ( agent(a, x) AND slept(a) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "slept", "vp2": "left", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy drank or ate and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND napped(i) ) OR ( agent(a, x) AND drank(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "drank", "vp2": "ate", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant drew or left and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND walked(i) ) OR ( agent(a, x) AND drew(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "drew", "vp2": "left", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow left and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND left(a) ) OR ( agent(i, x) AND drew(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "left", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played or walked and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND slept(i) AND walked(e) ) OR ( agent(a, x) AND played(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "walked", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked or left and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND slept(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played and left or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND left(e) AND played(a) ) OR ( agent(i, x) AND drew(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "left", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played and drank or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND played(a) ) OR ( agent(i, x) AND drew(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "drank", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant walked or napped and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND napped(e) ) OR ( agent(a, x) AND walked(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "walked", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl played and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "played", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played or drew and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND napped(i) ) OR ( agent(a, x) AND played(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or moved and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND played(i) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "moved", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "Katherine spotted Mary and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Mary) AND patient(a, Mary) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Mary", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spotted the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy spied Galileo and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Galileo) AND boy(x) AND patient(a, Galileo) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "Galileo", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy spied Sherlock and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Sherlock) AND boy(x) AND patient(a, Sherlock) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "Sherlock", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine observed Ada and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Ada) AND observed(a) AND patient(a, Ada) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Ada", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Ada and she lept", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Ada) AND lept(e) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Ada", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl observed the woman and she frowned", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND frowned(e) AND girl(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "woman", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spotted Bill and he waved", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Bill) AND patient(a, Bill) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "Bill", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary spotted Adele and she smiled", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Adele) AND patient(a, Adele) AND smiled(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "spotted", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Marie and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Marie) AND frowned(e) AND patient(a, Marie) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Marie", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Marie and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Marie) AND patient(a, Marie) AND shouted(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada saw Adele and she frowned", "lf": "exists a . exists e . agent(a, Ada) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "saw", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele observed Marie and she smiled", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Marie) AND observed(a) AND patient(a, Marie) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Marie", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spotted Katherine and she lept", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND lept(e) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Katherine", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Watson and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Watson) AND patient(a, Watson) AND saw(a) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied the girl and she smiled", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND girl(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "girl", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw Ada and she frowned", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Bill spied Watson and he lept", "lf": "exists a . exists e . agent(a, Bill) AND agent(e, Watson) AND lept(e) AND patient(a, Watson) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Watson", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Alan and he lept", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Alan) AND lept(e) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Alan", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND patient(a, Sherlock) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada observed Mary and she smiled", "lf": "exists a . exists e . agent(a, Ada) AND agent(e, Mary) AND observed(a) AND patient(a, Mary) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "observed", "np2": "Mary", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Bill and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Bill) AND observed(a) AND patient(a, Bill) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Bill", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND boy(x) AND patient(a, x) AND saw(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson spotted Sherlock and he frowned", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Sherlock) AND frowned(e) AND patient(a, Sherlock) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Sherlock", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spied Alan and he waved", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Alan) AND patient(a, Alan) AND spied(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Alan", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the man saw Alan and he shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Alan) AND man(x) AND patient(a, Alan) AND saw(a) AND shouted(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "Alan", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Bill and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Bill) AND observed(a) AND patient(a, Bill) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Bill", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed Katherine and she waved", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND observed(a) AND patient(a, Katherine) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson saw the man and he lept", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND lept(e) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "man", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Mary and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Mary) AND patient(a, Mary) AND shouted(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Mary", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted the girl and she waved", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND girl(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "girl", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Marie and she frowned", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND frowned(e) AND patient(a, Marie) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Marie", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spied Katherine and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie saw Ada and she shouted", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND patient(a, Ada) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "saw", "np2": "Ada", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Marie and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND patient(a, Marie) AND shouted(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy observed Watson and he waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Watson) AND boy(x) AND observed(a) AND patient(a, Watson) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "Watson", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw Bill and he shouted", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Bill) AND patient(a, Bill) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "Bill", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Bill spotted the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Bill) AND agent(e, x) AND boy(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Adele and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Adele) AND patient(a, Adele) AND shouted(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Adele", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the man observed Galileo and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Galileo) AND man(x) AND observed(a) AND patient(a, Galileo) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "Galileo", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy saw the man and he shouted", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND boy(x) AND man(y) AND patient(a, y) AND saw(a) AND shouted(e)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "man", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spied Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND patient(a, Sherlock) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson saw Galileo and he waved", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Galileo) AND patient(a, Galileo) AND saw(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "Galileo", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine saw Adele and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND saw(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "saw", "np2": "Adele", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Galileo) AND agent(e, x) AND boy(x) AND observed(a) AND patient(a, x) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed the girl and she frowned", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND frowned(e) AND girl(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman observed Katherine and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND observed(a) AND patient(a, Katherine) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spotted Katherine and she smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND patient(a, Katherine) AND smiled(e) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Katherine", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spotted Galileo and he waved", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Galileo) AND patient(a, Galileo) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "Galileo", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted the woman and she frowned", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND frowned(e) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "woman", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Galileo and he lept", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND lept(e) AND observed(a) AND patient(a, Galileo)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Galileo", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Adele and she shouted", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Adele", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the woman and she lept", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND lept(e) AND patient(a, x) AND saw(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "woman", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spied Katherine and she waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND patient(a, Katherine) AND spied(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spied Ada and she waved", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND patient(a, Ada) AND spied(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spied", "np2": "Ada", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted the girl and she smiled", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND girl(y) AND patient(a, y) AND smiled(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "girl", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Katherine and she waved", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted Adele and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed Alan and he lept", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Alan) AND lept(e) AND observed(a) AND patient(a, Alan)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Alan", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan observed the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND boy(x) AND observed(a) AND patient(a, x) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson spied the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "spied", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw Galileo and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND patient(a, Galileo) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Galileo", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine saw Adele and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "saw", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spied Galileo and he lept", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Galileo) AND lept(e) AND patient(a, Galileo) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spied", "np2": "Galileo", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted Adele and she smiled", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND smiled(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spied Ada and she frowned", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the man spotted Bill and he lept", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Bill) AND lept(e) AND man(x) AND patient(a, Bill) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "Bill", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed Katherine and she lept", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND lept(e) AND observed(a) AND patient(a, Katherine)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "Katherine", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spotted Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada spied the girl and she frowned", "lf": "exists x . exists a . exists e . agent(a, Ada) AND agent(e, x) AND frowned(e) AND girl(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "spied", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spotted the man and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND man(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "man", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele saw Katherine and she smiled", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND saw(a) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "saw", "np2": "Katherine", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spotted Ada and she lept", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND lept(e) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Ada", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw the man and he lept", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND lept(e) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "man", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada spotted the girl and she lept", "lf": "exists x . exists a . exists e . agent(a, Ada) AND agent(e, x) AND girl(x) AND lept(e) AND patient(a, x) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "girl", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spotted Adele and she lept", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Adele) AND lept(e) AND patient(a, Adele) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Adele", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the girl and she waved", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND girl(x) AND patient(a, x) AND saw(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "girl", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary spied Katherine and she shouted", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND patient(a, Katherine) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spied Mary and she lept", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Mary) AND lept(e) AND patient(a, Mary) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Mary", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed the man and he smiled", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND man(x) AND observed(a) AND patient(a, x) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "man", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl observed Adele and she smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Adele) AND girl(x) AND observed(a) AND patient(a, Adele) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND observed(a) AND patient(a, Alan)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the boy and he smiled", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND boy(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "boy", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spied the girl and she frowned", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND frowned(e) AND girl(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed Bill and he frowned", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Bill) AND frowned(e) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Bill", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the woman and she shouted", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND patient(a, x) AND saw(a) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "woman", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan observed Bill and he lept", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Bill) AND lept(e) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "Bill", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Ada and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw Watson and he shouted", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Watson) AND patient(a, Watson) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "Watson", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND observed(a) AND patient(a, Sherlock) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman saw Katherine and she waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND patient(a, Katherine) AND saw(a) AND waved(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Galileo and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND observed(a) AND patient(a, Galileo) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Galileo", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl saw the woman and she lept", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND girl(x) AND lept(e) AND patient(a, y) AND saw(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "woman", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Watson and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Watson) AND observed(a) AND patient(a, Watson) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the man saw Watson and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Watson) AND man(x) AND patient(a, Watson) AND saw(a) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the man and he smiled", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND man(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "man", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine observed Mary and she smiled", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Mary) AND observed(a) AND patient(a, Mary) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Mary", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman observed Marie and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND observed(a) AND patient(a, Marie) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "each fish picked up a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND pants(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat picked up an elephant", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND elephant(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "elephant"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish grabbed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND fish(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog spotted a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND dog(x) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "each boy spied a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND hat(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant picked up a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND elephant(x) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "picked_up", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl held a table", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND held(a) AND patient(a, y) AND table(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "table"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird picked up a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND crayon(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog spied a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND girl(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spied", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy spied a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cup(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND hat(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish observed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND hat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND mittens(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a cat", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND cat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "cat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow saw a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cow(x) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "saw", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman lifted a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND lifted(a) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish observed a spyglass", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND observed(a) AND patient(a, y) AND spyglass(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "spyglass"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND lifted(a) AND ovenmitts(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each man saw a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND man(x) AND ovenmitts(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant grabbed a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND grabbed(a) AND patient(a, y) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird grabbed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND grabbed(a) AND hat(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat held a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND cat(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "each man held a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND held(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman grabbed a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND ovenmitts(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat spied a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cat(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "spied", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "each boy observed a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND boy(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl grabbed a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND gloves(y) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND gloves(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every man spied a sweater", "lf": "forall x . exists y . exists a . agent(a, x) AND man(x) AND patient(a, y) AND spied(a) AND sweater(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spied", "np2": "sweater"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted an elephant", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "elephant"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow observed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND hat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "observed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant held a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND elephant(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird lifted a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND fish(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "lifted", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant held a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND crayon(y) AND elephant(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND lifted(a) AND patient(a, y) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish grabbed a man", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND grabbed(a) AND man(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "man"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy observed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND fish(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat observed a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND dog(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a woman", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "woman"}, "template_idx": 1, "type": "scope"}
{"surface": "each man saw a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND man(x) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every man lifted a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND lifted(a) AND man(x) AND mittens(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog held a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND held(a) AND patient(a, y) AND rock(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND hat(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl picked up a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND ovenmitts(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "picked_up", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird saw a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND ovenmitts(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each man grabbed a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND grabbed(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "grabbed", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish spotted a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND fish(x) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spotted", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow held a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cow(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman grabbed a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND pants(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman saw a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND patient(a, y) AND saw(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy picked up a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cup(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a spyglass", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND observed(a) AND patient(a, y) AND spyglass(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "spyglass"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl spied a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish saw a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND mittens(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "saw", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish spied a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(y) AND fish(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spied", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND crayon(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish observed a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND fish(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND elephant(x) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND mittens(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy held a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND hat(y) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat held a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND cat(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat lifted a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND gloves(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant spotted a table", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND patient(a, y) AND spotted(a) AND table(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spotted", "np2": "table"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog grabbed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND fish(y) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "grabbed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant picked up a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND hat(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "picked_up", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy spotted a cat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cat(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "cat"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant held a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND held(a) AND patient(a, y) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman grabbed a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND pants(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat held a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND held(a) AND patient(a, y) AND rock(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy picked up a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND patient(a, y) AND picked_up(a) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl grabbed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each man held a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND held(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND observed(a) AND patient(a, y) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow picked up a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND mittens(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow held a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND held(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish observed a woman", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "woman"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant held a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND held(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each man observed a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(y) AND man(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish picked up a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND patient(a, y) AND picked_up(a) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl grabbed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow spied a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND ovenmitts(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant spied a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND elephant(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow spotted a man", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND man(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "man"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog picked up a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND patient(a, y) AND picked_up(a) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant grabbed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND grabbed(a) AND hat(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat saw a sweater", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND patient(a, y) AND saw(a) AND sweater(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "saw", "np2": "sweater"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant spotted a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND gloves(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spotted", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl spied a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND girl(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman spotted a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(y) AND patient(a, y) AND spotted(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog grabbed a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND crayon(y) AND dog(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "grabbed", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat lifted a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND girl(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl grabbed a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog saw a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND patient(a, y) AND rock(y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog spotted a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND pants(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spotted", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish lifted a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND lifted(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "lifted", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman grabbed a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND grabbed(a) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "a boy spotted every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND ovenmitts(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted every sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow saw each table", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND saw(a) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "saw", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw each cow", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND cow(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed each pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND grabbed(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND patient(a, x) AND pyjamas(x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy picked up each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl held every boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND girl(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat picked up every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND mittens(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up every camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND dog(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy lifted every girl", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND girl(x) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "lifted", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant saw each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND elephant(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "saw", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw every man", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spied every telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spied(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spied", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant spied each girl", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND girl(x) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed each spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND patient(a, x) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman picked up every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND patient(a, x) AND picked_up(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish grabbed each table", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND grabbed(a) AND patient(a, x) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow held each pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND cow(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat held each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND held(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl lifted every cow", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(x) AND girl(y) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "lifted", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spotted each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND cow(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND crayon(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman lifted every hat", "lf": "forall x . exists y . exists a . agent(a, y) AND hat(x) AND lifted(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog held every pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND dog(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat held every bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND cat(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy picked up every pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND boy(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND cow(y) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman spotted each elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND patient(a, x) AND spotted(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw every cow", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(x) AND dog(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman observed every table", "lf": "forall x . exists y . exists a . agent(a, y) AND observed(a) AND patient(a, x) AND table(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman spotted each dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND patient(a, x) AND spotted(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish spotted every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND mittens(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spotted", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed every table", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND patient(a, x) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man held each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND held(a) AND man(y) AND patient(a, x) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy grabbed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND grabbed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant spied every rock", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND patient(a, x) AND rock(x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man grabbed every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cup(x) AND grabbed(a) AND man(y) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "grabbed", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND crayon(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND held(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man observed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish observed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND observed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish picked up every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND fish(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND observed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl observed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman grabbed each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND grabbed(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up each sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND picked_up(a) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant lifted each hat", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND hat(x) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird held each man", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND held(a) AND man(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "held", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each rock", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND rock(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl spotted each spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND patient(a, x) AND spotted(a) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND fish(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND held(a) AND mittens(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND mittens(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman lifted every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cup(x) AND lifted(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed every pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND observed(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND crayon(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl lifted each rock", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND lifted(a) AND patient(a, x) AND rock(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "lifted", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat spied every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "spied", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw every telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND saw(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spied each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spied", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl saw every elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND girl(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog lifted every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND lifted(a) AND patient(a, x) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "lifted", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman picked up each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND patient(a, x) AND picked_up(a) AND telescope(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each cow", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND cow(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow lifted each sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND lifted(a) AND patient(a, x) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "lifted", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND grabbed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl observed each camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND girl(y) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND elephant(y) AND grabbed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every table", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND spied(a) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog held each camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND dog(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog lifted each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND dog(y) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "lifted", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man picked up every sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND patient(a, x) AND picked_up(a) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "picked_up", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man held each girl", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(x) AND held(a) AND man(y) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish observed every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow grabbed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND grabbed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man spotted every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND patient(a, x) AND pyjamas(x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat grabbed every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND grabbed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow held every hat", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND hat(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND fish(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw each pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND ovenmitts(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND cow(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman saw every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND patient(a, x) AND saw(a) AND spyglass(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND held(a) AND patient(a, x) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant saw every man", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "saw", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spotted every boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND cow(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat picked up every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND patient(a, x) AND picked_up(a) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl spied each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND patient(a, x) AND spied(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man observed every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND observed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird lifted every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND lifted(a) AND patient(a, x) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "lifted", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat observed every pair of gloves", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND gloves(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "gloves"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman held each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND held(a) AND patient(a, x) AND telescope(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "held", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man spotted each elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND man(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up every crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND crayon(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spotted each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spotted(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spotted", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND cup(x) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "Watson spotted Alan with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Alan", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the man saw the woman with the camera", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND camera(z) AND instrument(a, z) AND man(x) AND patient(a, y) AND saw(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl grabbed the woman with the gloves", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND gloves(z) AND grabbed(a) AND instrument(a, z) AND patient(a, y) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary observed the man with the camera", "lf": "exists x . exists y . exists a . agent(a, Mary) AND camera(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "man", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele observed Ada with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Ada)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl spotted Sherlock with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND instrument(a, y) AND patient(a, Sherlock) AND spotted(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary observed the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Mary) AND binoculars(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan spotted Bill with the camera", "lf": "exists x . exists a . agent(a, Alan) AND camera(x) AND instrument(a, x) AND patient(a, Bill) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "Bill", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spotted the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Bill with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan picked up the girl with the gloves", "lf": "exists x . exists y . exists a . agent(a, Alan) AND girl(x) AND gloves(y) AND instrument(a, y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "picked_up", "np2": "girl", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan observed Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Alan) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman lifted the girl with the ovenmitts", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(y) AND instrument(a, z) AND lifted(a) AND ovenmitts(z) AND patient(a, y) AND woman(x)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "girl", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw Watson with the binoculars", "lf": "exists x . exists a . agent(a, Mary) AND binoculars(x) AND instrument(a, x) AND patient(a, Watson) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Watson", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo picked up the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND boy(x) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "picked_up", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND instrument(a, y) AND patient(a, x) AND spied(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine picked up the man with the mittens", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND instrument(a, y) AND man(x) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "picked_up", "np2": "man", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Mary with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Mary) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Mary", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw Sherlock with the telescope", "lf": "exists x . exists a . agent(a, Mary) AND instrument(a, x) AND patient(a, Sherlock) AND saw(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw the man with the telescope", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND instrument(a, z) AND man(y) AND patient(a, y) AND saw(a) AND telescope(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted Adele with the spyglass", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND patient(a, Adele) AND spotted(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Adele", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy spotted Sherlock with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND boy(x) AND instrument(a, y) AND patient(a, Sherlock) AND spotted(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan saw the man with the telescope", "lf": "exists x . exists y . exists a . agent(a, Alan) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the man spied Alan with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND man(x) AND patient(a, Alan) AND spied(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "spied", "np2": "Alan", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Mary with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Mary)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Mary", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Katherine with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine spied Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Katherine) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spotted Ada with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson observed Alan with the telescope", "lf": "exists x . exists a . agent(a, Watson) AND instrument(a, x) AND observed(a) AND patient(a, Alan) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Alan", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Marie) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary spied Sherlock with the telescope", "lf": "exists x . exists a . agent(a, Mary) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Sherlock", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo held the boy with the gloves", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND boy(x) AND gloves(y) AND held(a) AND instrument(a, y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "held", "np2": "boy", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill picked up the man with the gloves", "lf": "exists x . exists y . exists a . agent(a, Bill) AND gloves(y) AND instrument(a, y) AND man(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "picked_up", "np2": "man", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Mary with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND patient(a, Mary) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Mary", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spotted Katherine with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Katherine", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo saw the girl with the camera", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND camera(y) AND girl(x) AND instrument(a, y) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "girl", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan spied Mary with the spyglass", "lf": "exists x . exists a . agent(a, Alan) AND instrument(a, x) AND patient(a, Mary) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "spied", "np2": "Mary", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied the woman with the camera", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Alan with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Alan", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary saw the man with the spyglass", "lf": "exists x . exists y . exists a . agent(a, Mary) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "man", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan saw the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Alan) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND saw(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spied Katherine with the camera", "lf": "exists x . exists a . agent(a, Ada) AND camera(x) AND instrument(a, x) AND patient(a, Katherine) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spied", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl held the man with the ovenmitts", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(x) AND held(a) AND instrument(a, z) AND man(y) AND ovenmitts(z) AND patient(a, y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "man", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Katherine) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada picked up the man with the mittens", "lf": "exists x . exists y . exists a . agent(a, Ada) AND instrument(a, y) AND man(x) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "picked_up", "np2": "man", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Bill with the spyglass", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Bill) AND spied(a) AND spyglass(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Bill", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spied Watson with the binoculars", "lf": "exists x . exists a . agent(a, Galileo) AND binoculars(x) AND instrument(a, x) AND patient(a, Watson) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Watson", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw Adele with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Adele) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson picked up the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Watson) AND girl(x) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson saw Galileo with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Galileo) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "Galileo", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Adele with the telescope", "lf": "exists x . exists a . agent(a, Bill) AND instrument(a, x) AND patient(a, Adele) AND spied(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy saw Bill with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND boy(x) AND instrument(a, y) AND patient(a, Bill) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spied Marie with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Marie) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spied", "np2": "Marie", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spotted the boy with the spyglass", "lf": "exists x . exists y . exists a . agent(a, Ada) AND boy(x) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "boy", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman observed Sherlock with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND instrument(a, y) AND observed(a) AND patient(a, Sherlock) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill grabbed the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Bill) AND boy(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "grabbed", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy spied the man with the telescope", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND boy(x) AND instrument(a, z) AND man(y) AND patient(a, y) AND spied(a) AND telescope(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "man", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spotted Adele with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Adele) AND spotted(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Adele", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele held the man with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Adele) AND held(a) AND instrument(a, y) AND man(x) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "held", "np2": "man", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada grabbed the boy with the mittens", "lf": "exists x . exists y . exists a . agent(a, Ada) AND boy(x) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "grabbed", "np2": "boy", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock observed Ada with the spyglass", "lf": "exists x . exists a . agent(a, Sherlock) AND instrument(a, x) AND observed(a) AND patient(a, Ada) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Ada", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie observed Mary with the telescope", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND observed(a) AND patient(a, Mary) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "observed", "np2": "Mary", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Mary with the binoculars", "lf": "exists x . exists a . agent(a, Watson) AND binoculars(x) AND instrument(a, x) AND patient(a, Mary) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Mary", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele observed Sherlock with the binoculars", "lf": "exists x . exists a . agent(a, Adele) AND binoculars(x) AND instrument(a, x) AND observed(a) AND patient(a, Sherlock)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Sherlock", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied the boy with the camera", "lf": "exists x . exists y . exists a . agent(a, Bill) AND boy(x) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "boy", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman picked up the girl with the mittens", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND girl(y) AND instrument(a, z) AND mittens(z) AND patient(a, y) AND picked_up(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl saw Mary with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Mary) AND saw(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "Mary", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the man spotted Katherine with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND camera(y) AND instrument(a, y) AND man(x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "Katherine", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman saw Watson with the telescope", "lf": "exists x . exists y . exists a . agent(a, x) AND instrument(a, y) AND patient(a, Watson) AND saw(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "Watson", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the boy saw Alan with the camera", "lf": "exists x . exists y . exists a . agent(a, x) AND boy(x) AND camera(y) AND instrument(a, y) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "Alan", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Alan observed the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Alan) AND binoculars(y) AND instrument(a, y) AND man(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo spotted the woman with the telescope", "lf": "exists x . exists y . exists a . agent(a, Galileo) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND telescope(y) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "woman", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Mary spied Bill with the binoculars", "lf": "exists x . exists a . agent(a, Mary) AND binoculars(x) AND instrument(a, x) AND patient(a, Bill) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Bill", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie grabbed the boy with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Marie) AND boy(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "grabbed", "np2": "boy", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock spotted the girl with the telescope", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND telescope(y)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "girl", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted Katherine with the telescope", "lf": "exists x . exists a . agent(a, Marie) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a) AND telescope(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Katherine", "np3": "telescope"}, "template_idx": 1, "type": "pp"}
{"surface": "the girl spotted Ada with the spyglass", "lf": "exists x . exists y . exists a . agent(a, x) AND girl(x) AND instrument(a, y) AND patient(a, Ada) AND spotted(a) AND spyglass(y)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Ada", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spied the woman with the camera", "lf": "exists x . exists y . exists a . agent(a, Adele) AND camera(y) AND instrument(a, y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "woman", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spotted Galileo with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Galileo) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "Galileo", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "the man picked up the woman with the gloves", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND gloves(z) AND instrument(a, z) AND man(x) AND patient(a, y) AND picked_up(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "picked_up", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie spotted the woman with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Marie) AND binoculars(y) AND instrument(a, y) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "woman", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Galileo saw Bill with the spyglass", "lf": "exists x . exists a . agent(a, Galileo) AND instrument(a, x) AND patient(a, Bill) AND saw(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Bill", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock saw Adele with the spyglass", "lf": "exists x . exists a . agent(a, Sherlock) AND instrument(a, x) AND patient(a, Adele) AND saw(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Adele", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Galileo with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Galileo) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Galileo", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada spotted Katherine with the binoculars", "lf": "exists x . exists a . agent(a, Ada) AND binoculars(x) AND instrument(a, x) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "Katherine", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the man observed the boy with the spyglass", "lf": "exists x . exists y . exists z . exists a . agent(a, x) AND boy(y) AND instrument(a, z) AND man(x) AND observed(a) AND patient(a, y) AND spyglass(z)", "unfilled_template": "exists x . exists y . exists z . exists a . {np1}(x) AND {np2}(y) AND {np3}(z) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND instrument(a, z)", "template_tags": [null, "np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "boy", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill spied Ada with the camera", "lf": "exists x . exists a . agent(a, Bill) AND camera(x) AND instrument(a, x) AND patient(a, Ada) AND spied(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Ada", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock picked up the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "picked_up", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Ada saw the man with the binoculars", "lf": "exists x . exists y . exists a . agent(a, Ada) AND binoculars(y) AND instrument(a, y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Ada", "vp1": "saw", "np2": "man", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "the woman spied Ada with the binoculars", "lf": "exists x . exists y . exists a . agent(a, x) AND binoculars(y) AND instrument(a, y) AND patient(a, Ada) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np1}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND instrument(a, y)", "template_tags": [null, "np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Ada", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill grabbed the woman with the mittens", "lf": "exists x . exists y . exists a . agent(a, Bill) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "grabbed", "np2": "woman", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "Marie lifted the woman with the gloves", "lf": "exists x . exists y . exists a . agent(a, Marie) AND gloves(y) AND instrument(a, y) AND lifted(a) AND patient(a, x) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Marie", "vp1": "lifted", "np2": "woman", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Sherlock grabbed the girl with the ovenmitts", "lf": "exists x . exists y . exists a . agent(a, Sherlock) AND girl(x) AND grabbed(a) AND instrument(a, y) AND ovenmitts(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Sherlock", "vp1": "grabbed", "np2": "girl", "np3": "ovenmitts"}, "template_idx": 1, "type": "pp"}
{"surface": "Watson spotted Marie with the camera", "lf": "exists x . exists a . agent(a, Watson) AND camera(x) AND instrument(a, x) AND patient(a, Marie) AND spotted(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Marie", "np3": "camera"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele spied Sherlock with the spyglass", "lf": "exists x . exists a . agent(a, Adele) AND instrument(a, x) AND patient(a, Sherlock) AND spied(a) AND spyglass(x)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Sherlock", "np3": "spyglass"}, "template_idx": 1, "type": "pp"}
{"surface": "Bill saw Adele with the binoculars", "lf": "exists x . exists a . agent(a, Bill) AND binoculars(x) AND instrument(a, x) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists x . exists a . {np3}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND instrument(a, x)", "template_tags": ["np1", "vp1", "np2", null, "np3"], "var_bindings": {"np1": "Bill", "vp1": "saw", "np2": "Adele", "np3": "binoculars"}, "template_idx": 1, "type": "pp"}
{"surface": "Adele lifted the man with the gloves", "lf": "exists x . exists y . exists a . agent(a, Adele) AND gloves(y) AND instrument(a, y) AND lifted(a) AND man(x) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Adele", "vp1": "lifted", "np2": "man", "np3": "gloves"}, "template_idx": 1, "type": "pp"}
{"surface": "Katherine grabbed the girl with the mittens", "lf": "exists x . exists y . exists a . agent(a, Katherine) AND girl(x) AND grabbed(a) AND instrument(a, y) AND mittens(y) AND patient(a, x)", "unfilled_template": "exists x . exists y . exists a . {np2}(x) AND {np3}(y) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND instrument(a, y)", "template_tags": ["np1", "vp1", null, "np2", null, "np3"], "var_bindings": {"np1": "Katherine", "vp1": "grabbed", "np2": "girl", "np3": "mittens"}, "template_idx": 1, "type": "pp"}
{"surface": "the man left and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "left", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the man slept and played or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND left(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "slept", "vp2": "played", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank and played or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND slept(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "played", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the man ate and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND drew(e) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "ate", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl walked and moved or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(e) AND walked(a) ) OR ( agent(i, x) AND ate(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "walked", "vp2": "moved", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played or left and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND left(e) ) OR ( agent(a, x) AND played(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "left", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant drank or played and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(e) AND walked(i) ) OR ( agent(a, x) AND drank(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "drank", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept and played or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND walked(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman moved and slept or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(a) AND slept(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "moved", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept and ate or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND slept(a) ) OR ( agent(i, x) AND napped(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "ate", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat slept or moved and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND walked(i) ) OR ( agent(a, x) AND slept(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "slept", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl slept or napped and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND napped(e) ) OR ( agent(a, x) AND slept(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "slept", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked and played or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND walked(a) ) OR ( agent(i, x) AND drew(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "played", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped and slept or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(a) AND slept(e) ) OR ( agent(i, x) AND drank(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "slept", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked or napped and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(e) AND played(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "napped", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew and moved or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND moved(e) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or left and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND slept(i) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy ate or played and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(e) AND walked(i) ) OR ( agent(a, x) AND ate(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "ate", "vp2": "played", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped and drank or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND napped(a) ) OR ( agent(i, x) AND ate(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "drank", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy left and drew or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "left", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked and drank or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND walked(a) ) OR ( agent(i, x) AND napped(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "drank", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played and napped or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(e) AND played(a) ) OR ( agent(i, x) AND slept(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "napped", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant played or moved and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND walked(i) ) OR ( agent(a, x) AND played(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "played", "vp2": "moved", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird slept and played or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND drew(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "slept", "vp2": "played", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl walked and played or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND walked(a) ) OR ( agent(i, x) AND drank(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "walked", "vp2": "played", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish ate or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND ate(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "ate", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played and walked or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND walked(e) ) OR ( agent(i, x) AND slept(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "walked", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the man left or drew and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND walked(i) ) OR ( agent(a, x) AND left(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "left", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow moved and left or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND left(e) AND moved(a) ) OR ( agent(i, x) AND slept(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "moved", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drank or drew and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND moved(i) ) OR ( agent(a, x) AND drank(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drank", "vp2": "drew", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked or moved and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND napped(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "moved", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish slept or napped and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND napped(e) ) OR ( agent(a, x) AND slept(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "slept", "vp2": "napped", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird drank and left or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND left(e) ) OR ( agent(i, x) AND drew(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "drank", "vp2": "left", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played or left and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND left(e) ) OR ( agent(a, x) AND played(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "left", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or moved and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND moved(e) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "moved", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the man drew and slept or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND slept(e) ) OR ( agent(i, x) AND drank(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "drew", "vp2": "slept", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the man moved or drank and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND drew(i) ) OR ( agent(a, x) AND moved(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "moved", "vp2": "drank", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish left and drew or slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND left(a) ) OR ( agent(i, x) AND slept(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "left", "vp2": "drew", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drew or slept and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND slept(e) ) OR ( agent(a, x) AND drew(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drew", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the man ate and slept or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND slept(e) ) OR ( agent(i, x) AND napped(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "ate", "vp2": "slept", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy slept or played and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND played(e) ) OR ( agent(a, x) AND slept(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "slept", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird played and napped or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND napped(e) AND played(a) ) OR ( agent(i, x) AND drank(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "played", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or slept and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND slept(e) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "slept", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish slept or drank and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND drank(e) ) OR ( agent(a, x) AND slept(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "slept", "vp2": "drank", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played and slept or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "slept", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or left and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND napped(i) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "left", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked and moved or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(e) AND walked(a) ) OR ( agent(i, x) AND left(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat walked and drank or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND walked(a) ) OR ( agent(i, x) AND left(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "walked", "vp2": "drank", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew and played or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND played(e) ) OR ( agent(i, x) AND drank(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "played", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant moved and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND moved(a) ) OR ( agent(i, x) AND drew(i) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "moved", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the man walked or played and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND played(e) ) OR ( agent(a, x) AND walked(a) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "walked", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or drew and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND played(i) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "drew", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy napped or ate and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND drank(i) ) OR ( agent(a, x) AND napped(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "napped", "vp2": "ate", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl drew or moved and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND moved(e) ) OR ( agent(a, x) AND drew(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "drew", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played and drew or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(e) AND played(a) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow left and drank or napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND left(a) ) OR ( agent(i, x) AND napped(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "left", "vp2": "drank", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank and played or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND moved(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl napped and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND napped(a) ) OR ( agent(i, x) AND drew(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "napped", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy napped or drank and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND played(i) ) OR ( agent(a, x) AND napped(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "napped", "vp2": "drank", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank and drew or played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND drew(e) ) OR ( agent(i, x) AND played(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "drew", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drank or moved and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND moved(e) ) OR ( agent(a, x) AND drank(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drank", "vp2": "moved", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or napped and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(e) AND played(i) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "napped", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow slept or left and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND played(i) ) OR ( agent(a, x) AND slept(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "slept", "vp2": "left", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow drew or moved and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND napped(i) ) OR ( agent(a, x) AND drew(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "drew", "vp2": "moved", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl left or ate and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND walked(i) ) OR ( agent(a, x) AND left(a) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "left", "vp2": "ate", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy left or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND left(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "left", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or walked and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND played(i) AND walked(e) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "walked", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played or drew and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND moved(i) ) OR ( agent(a, x) AND played(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "drew", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird drank and played or left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND left(i) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "drank", "vp2": "played", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy slept or drank and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(e) AND moved(i) ) OR ( agent(a, x) AND slept(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "slept", "vp2": "drank", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drank or walked and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND napped(i) AND walked(e) ) OR ( agent(a, x) AND drank(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drank", "vp2": "walked", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked and ate or drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND walked(a) ) OR ( agent(i, x) AND drank(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "ate", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat drew or left and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND napped(i) ) OR ( agent(a, x) AND drew(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "drew", "vp2": "left", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish moved or walked and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND walked(e) ) OR ( agent(a, x) AND moved(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "moved", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow slept and played or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(e) AND slept(a) ) OR ( agent(i, x) AND moved(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "slept", "vp2": "played", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the man drew and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drew(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND man(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "man", "vp1": "drew", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog ate and left or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND left(e) ) OR ( agent(i, x) AND moved(i) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "ate", "vp2": "left", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow ate and drew or walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(a) AND drew(e) ) OR ( agent(i, x) AND walked(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "ate", "vp2": "drew", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog napped or moved and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND slept(i) ) OR ( agent(a, x) AND napped(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "napped", "vp2": "moved", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or slept and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(i) AND slept(e) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "slept", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant slept or walked and drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(i) AND walked(e) ) OR ( agent(a, x) AND slept(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "slept", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow played and walked or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND walked(e) ) OR ( agent(i, x) AND ate(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "played", "vp2": "walked", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman drank or walked and moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(i) AND walked(e) ) OR ( agent(a, x) AND drank(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "drank", "vp2": "walked", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat napped or ate and left", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND left(i) ) OR ( agent(a, x) AND napped(a) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "napped", "vp2": "ate", "vp3": "left"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman walked or played and ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(i) AND played(e) ) OR ( agent(a, x) AND walked(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "walked", "vp2": "played", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl moved and walked or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND moved(a) AND walked(e) ) OR ( agent(i, x) AND drew(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "moved", "vp2": "walked", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman drank and played or ate", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(a) AND played(e) ) OR ( agent(i, x) AND ate(i) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "drank", "vp2": "played", "vp3": "ate"}, "template_idx": 1, "type": "conj"}
{"surface": "the bird slept or left and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND left(e) ) OR ( agent(a, x) AND slept(a) ) ) AND bird(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "bird", "vp1": "slept", "vp2": "left", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the boy drank or ate and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND ate(e) AND napped(i) ) OR ( agent(a, x) AND drank(a) ) ) AND boy(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "boy", "vp1": "drank", "vp2": "ate", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant drew or left and walked", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND walked(i) ) OR ( agent(a, x) AND drew(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "drew", "vp2": "left", "vp3": "walked"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow left and ate or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND ate(e) AND left(a) ) OR ( agent(i, x) AND drew(i) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "left", "vp2": "ate", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the woman played or walked and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND slept(i) AND walked(e) ) OR ( agent(a, x) AND played(a) ) ) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "woman", "vp1": "played", "vp2": "walked", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the cow walked or left and slept", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND left(e) AND slept(i) ) OR ( agent(a, x) AND walked(a) ) ) AND cow(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cow", "vp1": "walked", "vp2": "left", "vp3": "slept"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played and left or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND left(e) AND played(a) ) OR ( agent(i, x) AND drew(i) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "left", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the cat played and drank or drew", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND drank(e) AND played(a) ) OR ( agent(i, x) AND drew(i) ) ) AND cat(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "cat", "vp1": "played", "vp2": "drank", "vp3": "drew"}, "template_idx": 1, "type": "conj"}
{"surface": "the elephant walked or napped and drank", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drank(i) AND napped(e) ) OR ( agent(a, x) AND walked(a) ) ) AND elephant(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "elephant", "vp1": "walked", "vp2": "napped", "vp3": "drank"}, "template_idx": 1, "type": "conj"}
{"surface": "the girl played and slept or moved", "lf": "exists x . exists a . exists e . exists i . ( ( agent(a, x) AND agent(e, x) AND played(a) AND slept(e) ) OR ( agent(i, x) AND moved(i) ) ) AND girl(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) AND {vp2}(e) AND agent(e, x) ) OR ( {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "girl", "vp1": "played", "vp2": "slept", "vp3": "moved"}, "template_idx": 1, "type": "conj"}
{"surface": "the fish played or drew and napped", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND drew(e) AND napped(i) ) OR ( agent(a, x) AND played(a) ) ) AND fish(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "fish", "vp1": "played", "vp2": "drew", "vp3": "napped"}, "template_idx": 1, "type": "conj"}
{"surface": "the dog drew or moved and played", "lf": "exists x . exists a . exists e . exists i . ( ( agent(e, x) AND agent(i, x) AND moved(e) AND played(i) ) OR ( agent(a, x) AND drew(a) ) ) AND dog(x)", "unfilled_template": "exists x . exists a . exists e . exists i . {np1}(x) AND ( ( {vp1}(a) AND agent(a, x) ) OR ( {vp2}(e) AND agent(e, x) AND {vp3}(i) AND agent(i, x) ) )", "template_tags": [null, "np1", "vp1", null, "vp2", null, "vp3"], "var_bindings": {"np1": "dog", "vp1": "drew", "vp2": "moved", "vp3": "played"}, "template_idx": 1, "type": "conj"}
{"surface": "Katherine spotted Mary and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Mary) AND patient(a, Mary) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Mary", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spotted the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy spied Galileo and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Galileo) AND boy(x) AND patient(a, Galileo) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "Galileo", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy spied Sherlock and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Sherlock) AND boy(x) AND patient(a, Sherlock) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "Sherlock", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine observed Ada and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Ada) AND observed(a) AND patient(a, Ada) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Ada", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Ada and she lept", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Ada) AND lept(e) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Ada", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl observed the woman and she frowned", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND frowned(e) AND girl(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "woman", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spotted Bill and he waved", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Bill) AND patient(a, Bill) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spotted", "np2": "Bill", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary spotted Adele and she smiled", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Adele) AND patient(a, Adele) AND smiled(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "spotted", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Marie and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Marie) AND frowned(e) AND patient(a, Marie) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Marie", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Marie and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Marie) AND patient(a, Marie) AND shouted(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada saw Adele and she frowned", "lf": "exists a . exists e . agent(a, Ada) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "saw", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele observed Marie and she smiled", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Marie) AND observed(a) AND patient(a, Marie) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "observed", "np2": "Marie", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spotted Katherine and she lept", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND lept(e) AND patient(a, Katherine) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Katherine", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Watson and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Watson) AND patient(a, Watson) AND saw(a) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied the girl and she smiled", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND girl(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "girl", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw Ada and she frowned", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Bill spied Watson and he lept", "lf": "exists a . exists e . agent(a, Bill) AND agent(e, Watson) AND lept(e) AND patient(a, Watson) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Bill", "vp1": "spied", "np2": "Watson", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Alan and he lept", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Alan) AND lept(e) AND patient(a, Alan) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Alan", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo saw Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND patient(a, Sherlock) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "saw", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada observed Mary and she smiled", "lf": "exists a . exists e . agent(a, Ada) AND agent(e, Mary) AND observed(a) AND patient(a, Mary) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "observed", "np2": "Mary", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Bill and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Bill) AND observed(a) AND patient(a, Bill) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Bill", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND boy(x) AND patient(a, x) AND saw(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson spotted Sherlock and he frowned", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Sherlock) AND frowned(e) AND patient(a, Sherlock) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "spotted", "np2": "Sherlock", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spied Alan and he waved", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Alan) AND patient(a, Alan) AND spied(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Alan", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the man saw Alan and he shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Alan) AND man(x) AND patient(a, Alan) AND saw(a) AND shouted(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "Alan", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Bill and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Bill) AND observed(a) AND patient(a, Bill) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Bill", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed Katherine and she waved", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND observed(a) AND patient(a, Katherine) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson saw the man and he lept", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND lept(e) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "man", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Mary and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Mary) AND patient(a, Mary) AND shouted(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Mary", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted the girl and she waved", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND girl(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "girl", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Marie and she frowned", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND frowned(e) AND patient(a, Marie) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Marie", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spied Katherine and she shouted", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie saw Ada and she shouted", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND patient(a, Ada) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "saw", "np2": "Ada", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Marie and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND patient(a, Marie) AND shouted(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy observed Watson and he waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Watson) AND boy(x) AND observed(a) AND patient(a, Watson) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "Watson", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw Bill and he shouted", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Bill) AND patient(a, Bill) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "Bill", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Bill spotted the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Bill) AND agent(e, x) AND boy(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Bill", "vp1": "spotted", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted Adele and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Adele) AND patient(a, Adele) AND shouted(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "Adele", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the man observed Galileo and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Galileo) AND man(x) AND observed(a) AND patient(a, Galileo) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "Galileo", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the boy saw the man and he shouted", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND boy(x) AND man(y) AND patient(a, y) AND saw(a) AND shouted(e)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "man", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo spied Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND patient(a, Sherlock) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "spied", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson saw Galileo and he waved", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Galileo) AND patient(a, Galileo) AND saw(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "saw", "np2": "Galileo", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine saw Adele and she waved", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND saw(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "saw", "np2": "Adele", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Galileo) AND agent(e, x) AND boy(x) AND observed(a) AND patient(a, x) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed the girl and she frowned", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND frowned(e) AND girl(x) AND observed(a) AND patient(a, x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman observed Katherine and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND observed(a) AND patient(a, Katherine) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spotted Katherine and she smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND patient(a, Katherine) AND smiled(e) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "Katherine", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spotted Galileo and he waved", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Galileo) AND patient(a, Galileo) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "Galileo", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted the woman and she frowned", "lf": "exists x . exists a . exists e . agent(a, Katherine) AND agent(e, x) AND frowned(e) AND patient(a, x) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "woman", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Galileo and he lept", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND lept(e) AND observed(a) AND patient(a, Galileo)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Galileo", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Adele and she shouted", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Adele", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the woman and she lept", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND lept(e) AND patient(a, x) AND saw(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "woman", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl spied Katherine and she waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND girl(x) AND patient(a, Katherine) AND spied(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spied Ada and she waved", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND patient(a, Ada) AND spied(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spied", "np2": "Ada", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spotted the girl and she smiled", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND girl(y) AND patient(a, y) AND smiled(e) AND spotted(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "girl", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spotted Katherine and she waved", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND spotted(a) AND waved(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spotted", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted Adele and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed Alan and he lept", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Alan) AND lept(e) AND observed(a) AND patient(a, Alan)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Alan", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan observed the boy and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND boy(x) AND observed(a) AND patient(a, x) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "boy", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson spied the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "spied", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw Galileo and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND patient(a, Galileo) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "Galileo", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine saw Adele and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND frowned(e) AND patient(a, Adele) AND saw(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "saw", "np2": "Adele", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spied Galileo and he lept", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Galileo) AND lept(e) AND patient(a, Galileo) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spied", "np2": "Galileo", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spotted Adele and she smiled", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Adele) AND patient(a, Adele) AND smiled(e) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spotted", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spied Ada and she frowned", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the man spotted Bill and he lept", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Bill) AND lept(e) AND man(x) AND patient(a, Bill) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "Bill", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary observed Katherine and she lept", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND lept(e) AND observed(a) AND patient(a, Katherine)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "observed", "np2": "Katherine", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spotted Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND patient(a, Alan) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spotted", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada spied the girl and she frowned", "lf": "exists x . exists a . exists e . agent(a, Ada) AND agent(e, x) AND frowned(e) AND girl(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "spied", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan spotted the man and he waved", "lf": "exists x . exists a . exists e . agent(a, Alan) AND agent(e, x) AND man(x) AND patient(a, x) AND spotted(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "spotted", "np2": "man", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele saw Katherine and she smiled", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Katherine) AND patient(a, Katherine) AND saw(a) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "saw", "np2": "Katherine", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spotted Ada and she lept", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Ada) AND lept(e) AND patient(a, Ada) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Ada", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock saw the man and he lept", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND lept(e) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "saw", "np2": "man", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Ada spotted the girl and she lept", "lf": "exists x . exists a . exists e . agent(a, Ada) AND agent(e, x) AND girl(x) AND lept(e) AND patient(a, x) AND spotted(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Ada", "vp1": "spotted", "np2": "girl", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Marie spotted Adele and she lept", "lf": "exists a . exists e . agent(a, Marie) AND agent(e, Adele) AND lept(e) AND patient(a, Adele) AND spotted(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Marie", "vp1": "spotted", "np2": "Adele", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the girl and she waved", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND girl(x) AND patient(a, x) AND saw(a) AND waved(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "girl", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary spied Katherine and she shouted", "lf": "exists a . exists e . agent(a, Mary) AND agent(e, Katherine) AND patient(a, Katherine) AND shouted(e) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "spied", "np2": "Katherine", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Adele spied Mary and she lept", "lf": "exists a . exists e . agent(a, Adele) AND agent(e, Mary) AND lept(e) AND patient(a, Mary) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Adele", "vp1": "spied", "np2": "Mary", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed the man and he smiled", "lf": "exists x . exists a . exists e . agent(a, Watson) AND agent(e, x) AND man(x) AND observed(a) AND patient(a, x) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "man", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl observed Adele and she smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Adele) AND girl(x) AND observed(a) AND patient(a, Adele) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "Adele", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Alan and he frowned", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Alan) AND frowned(e) AND observed(a) AND patient(a, Alan)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Alan", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the boy and he smiled", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND boy(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "boy", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the man and he frowned", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND frowned(e) AND man(x) AND patient(a, x) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "man", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman spied the girl and she frowned", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND frowned(e) AND girl(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "girl", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Watson observed Bill and he frowned", "lf": "exists a . exists e . agent(a, Watson) AND agent(e, Bill) AND frowned(e) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Watson", "vp1": "observed", "np2": "Bill", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Mary saw the woman and she shouted", "lf": "exists x . exists a . exists e . agent(a, Mary) AND agent(e, x) AND patient(a, x) AND saw(a) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Mary", "vp1": "saw", "np2": "woman", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan observed Bill and he lept", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Bill) AND lept(e) AND observed(a) AND patient(a, Bill)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "observed", "np2": "Bill", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine spied Ada and she frowned", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Ada) AND frowned(e) AND patient(a, Ada) AND spied(a)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "spied", "np2": "Ada", "vp2": "frowned"}, "template_idx": 1, "type": "bound"}
{"surface": "Alan saw Watson and he shouted", "lf": "exists a . exists e . agent(a, Alan) AND agent(e, Watson) AND patient(a, Watson) AND saw(a) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Alan", "vp1": "saw", "np2": "Watson", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Sherlock and he shouted", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Sherlock) AND observed(a) AND patient(a, Sherlock) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Sherlock", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman saw Katherine and she waved", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Katherine) AND patient(a, Katherine) AND saw(a) AND waved(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "Katherine", "vp2": "waved"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock observed Galileo and he shouted", "lf": "exists a . exists e . agent(a, Sherlock) AND agent(e, Galileo) AND observed(a) AND patient(a, Galileo) AND shouted(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "observed", "np2": "Galileo", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "the girl saw the woman and she lept", "lf": "exists x . exists y . exists a . exists e . agent(a, x) AND agent(e, y) AND girl(x) AND lept(e) AND patient(a, y) AND saw(a) AND woman(y)", "unfilled_template": "exists x . exists y . exists a . exists e . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y) AND {vp2}(e) AND agent(e, y)", "template_tags": [null, "np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "woman", "vp2": "lept"}, "template_idx": 1, "type": "bound"}
{"surface": "Galileo observed Watson and he smiled", "lf": "exists a . exists e . agent(a, Galileo) AND agent(e, Watson) AND observed(a) AND patient(a, Watson) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Galileo", "vp1": "observed", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the man saw Watson and he smiled", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Watson) AND man(x) AND patient(a, Watson) AND saw(a) AND smiled(e)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "Watson", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Sherlock spied the man and he smiled", "lf": "exists x . exists a . exists e . agent(a, Sherlock) AND agent(e, x) AND man(x) AND patient(a, x) AND smiled(e) AND spied(a)", "unfilled_template": "exists x . exists a . exists e . {np2}(x) AND {vp1}(a) AND agent(a, {np1}) AND patient(a, x) AND {vp2}(e) AND agent(e, x)", "template_tags": ["np1", "vp1", null, "np2", null, "vp2"], "var_bindings": {"np1": "Sherlock", "vp1": "spied", "np2": "man", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "Katherine observed Mary and she smiled", "lf": "exists a . exists e . agent(a, Katherine) AND agent(e, Mary) AND observed(a) AND patient(a, Mary) AND smiled(e)", "unfilled_template": "exists a . exists e . {vp1}(a) AND agent(a, {np1}) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": ["np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "Katherine", "vp1": "observed", "np2": "Mary", "vp2": "smiled"}, "template_idx": 1, "type": "bound"}
{"surface": "the woman observed Marie and she shouted", "lf": "exists x . exists a . exists e . agent(a, x) AND agent(e, Marie) AND observed(a) AND patient(a, Marie) AND shouted(e) AND woman(x)", "unfilled_template": "exists x . exists a . exists e . {np1}(x) AND {vp1}(a) AND agent(a, x) AND patient(a, {np2}) AND {vp2}(e) AND agent(e, {np2})", "template_tags": [null, "np1", "vp1", "np2", null, "vp2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "Marie", "vp2": "shouted"}, "template_idx": 1, "type": "bound"}
{"surface": "each fish picked up a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND pants(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat picked up an elephant", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND elephant(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "elephant"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish grabbed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND fish(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog spotted a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND dog(x) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "each boy spied a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND hat(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant picked up a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND elephant(x) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "picked_up", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl held a table", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND held(a) AND patient(a, y) AND table(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "table"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird picked up a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND crayon(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog spied a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND girl(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spied", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy spied a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cup(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spied", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND hat(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish observed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND hat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND mittens(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a cat", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND cat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "cat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow saw a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cow(x) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "saw", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman lifted a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND lifted(a) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish observed a spyglass", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND observed(a) AND patient(a, y) AND spyglass(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "spyglass"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND lifted(a) AND ovenmitts(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each man saw a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND man(x) AND ovenmitts(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant grabbed a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND grabbed(a) AND patient(a, y) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird grabbed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND grabbed(a) AND hat(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat held a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND cat(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "each man held a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND held(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman grabbed a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND ovenmitts(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat spied a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cat(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "spied", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "each boy observed a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND boy(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl grabbed a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND gloves(y) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND gloves(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every man spied a sweater", "lf": "forall x . exists y . exists a . agent(a, x) AND man(x) AND patient(a, y) AND spied(a) AND sweater(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spied", "np2": "sweater"}, "template_idx": 1, "type": "scope"}
{"surface": "each man lifted an elephant", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(y) AND lifted(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "elephant"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow observed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND hat(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "observed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant held a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND elephant(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird lifted a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND fish(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "lifted", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant held a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND crayon(y) AND elephant(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND lifted(a) AND patient(a, y) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish grabbed a man", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND grabbed(a) AND man(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "man"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy observed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND fish(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat observed a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND dog(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a woman", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "woman"}, "template_idx": 1, "type": "scope"}
{"surface": "each man saw a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND man(x) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "saw", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every man lifted a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND lifted(a) AND man(x) AND mittens(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "lifted", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog held a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND held(a) AND patient(a, y) AND rock(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman spied a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND hat(y) AND patient(a, y) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spied", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl picked up a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(x) AND ovenmitts(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "picked_up", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each bird saw a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND ovenmitts(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each man grabbed a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND grabbed(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "grabbed", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish spotted a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND fish(x) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spotted", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow held a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND cow(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every woman grabbed a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND pants(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman saw a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND patient(a, y) AND saw(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy picked up a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cup(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a spyglass", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND observed(a) AND patient(a, y) AND spyglass(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "spyglass"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl spied a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish saw a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND mittens(y) AND patient(a, y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "saw", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish spied a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(y) AND fish(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spied", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND crayon(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish observed a camera", "lf": "forall x . exists y . exists a . agent(a, x) AND camera(y) AND fish(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "camera"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant lifted a boy", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(y) AND elephant(x) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "boy"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat observed a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND mittens(y) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy held a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND hat(y) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat held a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND cat(x) AND held(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat lifted a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND gloves(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant spotted a table", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND patient(a, y) AND spotted(a) AND table(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spotted", "np2": "table"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog grabbed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND fish(y) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "grabbed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant picked up a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND hat(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "picked_up", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy spotted a cat", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND cat(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "cat"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant held a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND held(a) AND patient(a, y) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman grabbed a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND grabbed(a) AND pants(y) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each cat held a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND held(a) AND patient(a, y) AND rock(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every boy picked up a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND boy(x) AND patient(a, y) AND picked_up(a) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl grabbed a fish", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "fish"}, "template_idx": 1, "type": "scope"}
{"surface": "each man held a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND held(a) AND man(x) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every bird observed a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(x) AND observed(a) AND patient(a, y) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "observed", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow picked up a pair of mittens", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND mittens(y) AND patient(a, y) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "mittens"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow held a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND held(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish observed a woman", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND observed(a) AND patient(a, y) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "woman"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant held a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND held(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "held", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each man observed a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(y) AND man(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "each fish picked up a set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND patient(a, y) AND picked_up(a) AND pyjamas(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "pyjamas"}, "template_idx": 1, "type": "scope"}
{"surface": "each girl grabbed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "every cow spied a pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND ovenmitts(y) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant spied a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND elephant(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each cow spotted a man", "lf": "forall x . exists y . exists a . agent(a, x) AND cow(x) AND man(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "man"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog picked up a telescope", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND patient(a, y) AND picked_up(a) AND telescope(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope"}
{"surface": "every elephant grabbed a hat", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND grabbed(a) AND hat(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "hat"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat saw a sweater", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND patient(a, y) AND saw(a) AND sweater(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "saw", "np2": "sweater"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a dog", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "dog"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl observed a pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, x) AND binoculars(y) AND girl(x) AND observed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "binoculars"}, "template_idx": 1, "type": "scope"}
{"surface": "each elephant spotted a pair of gloves", "lf": "forall x . exists y . exists a . agent(a, x) AND elephant(x) AND gloves(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spotted", "np2": "gloves"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl spied a bird", "lf": "forall x . exists y . exists a . agent(a, x) AND bird(y) AND girl(x) AND patient(a, y) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "bird"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman spotted a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND girl(y) AND patient(a, y) AND spotted(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "each dog grabbed a crayon", "lf": "forall x . exists y . exists a . agent(a, x) AND crayon(y) AND dog(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "grabbed", "np2": "crayon"}, "template_idx": 1, "type": "scope"}
{"surface": "every cat lifted a girl", "lf": "forall x . exists y . exists a . agent(a, x) AND cat(x) AND girl(y) AND lifted(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "girl"}, "template_idx": 1, "type": "scope"}
{"surface": "every girl grabbed a cup", "lf": "forall x . exists y . exists a . agent(a, x) AND cup(y) AND girl(x) AND grabbed(a) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "grabbed", "np2": "cup"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog saw a rock", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND patient(a, y) AND rock(y) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "rock"}, "template_idx": 1, "type": "scope"}
{"surface": "every dog spotted a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND dog(x) AND pants(y) AND patient(a, y) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "spotted", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "every fish lifted a pair of pants", "lf": "forall x . exists y . exists a . agent(a, x) AND fish(x) AND lifted(a) AND pants(y) AND patient(a, y)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "lifted", "np2": "pants"}, "template_idx": 1, "type": "scope"}
{"surface": "each woman grabbed a book", "lf": "forall x . exists y . exists a . agent(a, x) AND book(y) AND grabbed(a) AND patient(a, y) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(x) AND {np2}(y) AND {vp1}(a) AND agent(a, x) AND patient(a, y)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "book"}, "template_idx": 1, "type": "scope"}
{"surface": "a boy spotted every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND ovenmitts(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "spotted", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted every sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow saw each table", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND saw(a) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "saw", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw each cow", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND cow(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed each pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND grabbed(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND patient(a, x) AND pyjamas(x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy picked up each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl held every boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND girl(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat picked up every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND mittens(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up every camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND dog(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy lifted every girl", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND girl(x) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "lifted", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant saw each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND elephant(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "saw", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy saw every man", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "saw", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spied every telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spied(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spied", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant spied each girl", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND girl(x) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed each spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND patient(a, x) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman picked up every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND patient(a, x) AND picked_up(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish grabbed each table", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND grabbed(a) AND patient(a, x) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "grabbed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow held each pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND cow(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat held each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND held(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl lifted every cow", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(x) AND girl(y) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "lifted", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spotted each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND cow(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND crayon(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman lifted every hat", "lf": "forall x . exists y . exists a . agent(a, y) AND hat(x) AND lifted(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog held every pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND dog(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat held every bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND cat(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy picked up every pair of binoculars", "lf": "forall x . exists y . exists a . agent(a, y) AND binoculars(x) AND boy(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "picked_up", "np2": "binoculars"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND cow(y) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman spotted each elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND patient(a, x) AND spotted(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw every cow", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(x) AND dog(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman observed every table", "lf": "forall x . exists y . exists a . agent(a, y) AND observed(a) AND patient(a, x) AND table(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "observed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman spotted each dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND patient(a, x) AND spotted(a) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "spotted", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish spotted every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND mittens(x) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "spotted", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed every table", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND patient(a, x) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man held each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND held(a) AND man(y) AND patient(a, x) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy grabbed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND grabbed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant spied every rock", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND patient(a, x) AND rock(x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "spied", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man grabbed every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cup(x) AND grabbed(a) AND man(y) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "grabbed", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND crayon(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND held(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man observed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish observed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND observed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish picked up every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND fish(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "picked_up", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND observed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl observed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman grabbed each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND grabbed(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "grabbed", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog picked up each sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND picked_up(a) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "picked_up", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant lifted each hat", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND hat(x) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "lifted", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird held each man", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND held(a) AND man(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "held", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat lifted each rock", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND lifted(a) AND patient(a, x) AND rock(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "lifted", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl spotted each spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND patient(a, x) AND spotted(a) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spotted", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held each boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND fish(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND held(a) AND mittens(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird grabbed each pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND grabbed(a) AND mittens(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "grabbed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman lifted every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cup(x) AND lifted(a) AND patient(a, x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "lifted", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed every pair of pants", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND observed(a) AND pants(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "pants"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy observed each crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND crayon(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "observed", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl lifted each rock", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND lifted(a) AND patient(a, x) AND rock(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "lifted", "np2": "rock"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat spied every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "spied", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND picked_up(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw every telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND patient(a, x) AND saw(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spied each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spied(a) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spied", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl saw every elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND girl(y) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "saw", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog lifted every woman", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND lifted(a) AND patient(a, x) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "lifted", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman picked up each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND patient(a, x) AND picked_up(a) AND telescope(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "picked_up", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each cow", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND cow(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "cow"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow lifted each sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND lifted(a) AND patient(a, x) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "lifted", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed each set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND grabbed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl observed each camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND girl(y) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "observed", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant grabbed every dog", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(x) AND elephant(y) AND grabbed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "grabbed", "np2": "dog"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every table", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND patient(a, x) AND spied(a) AND table(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "table"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog held each camera", "lf": "forall x . exists y . exists a . agent(a, y) AND camera(x) AND dog(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "held", "np2": "camera"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog lifted each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND dog(y) AND lifted(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "lifted", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man picked up every sweater", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND patient(a, x) AND picked_up(a) AND sweater(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "picked_up", "np2": "sweater"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man held each girl", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(x) AND held(a) AND man(y) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "held", "np2": "girl"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish observed every pair of mittens", "lf": "forall x . exists y . exists a . agent(a, y) AND fish(y) AND mittens(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "observed", "np2": "mittens"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow grabbed every pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND grabbed(a) AND ovenmitts(x) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "grabbed", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man spotted every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND patient(a, x) AND pyjamas(x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat grabbed every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND grabbed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "grabbed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow held every hat", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND hat(x) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "held", "np2": "hat"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a fish held every bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND fish(y) AND held(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "fish", "vp1": "held", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a dog saw each pair of ovenmitts", "lf": "forall x . exists y . exists a . agent(a, y) AND dog(y) AND ovenmitts(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "dog", "vp1": "saw", "np2": "ovenmitts"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up each bird", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(x) AND cow(y) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "bird"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman saw every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND patient(a, x) AND saw(a) AND spyglass(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "saw", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a boy held each woman", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(y) AND held(a) AND patient(a, x) AND woman(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "boy", "vp1": "held", "np2": "woman"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "an elephant saw every man", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(y) AND man(x) AND patient(a, x) AND saw(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "elephant", "vp1": "saw", "np2": "man"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spotted every boy", "lf": "forall x . exists y . exists a . agent(a, y) AND boy(x) AND cow(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spotted", "np2": "boy"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat picked up every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND patient(a, x) AND picked_up(a) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "picked_up", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a girl spied each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND girl(y) AND patient(a, x) AND spied(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "girl", "vp1": "spied", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man observed every set of pyjamas", "lf": "forall x . exists y . exists a . agent(a, y) AND man(y) AND observed(a) AND patient(a, x) AND pyjamas(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "observed", "np2": "pyjamas"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird lifted every spyglass", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND lifted(a) AND patient(a, x) AND spyglass(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "lifted", "np2": "spyglass"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cat observed every pair of gloves", "lf": "forall x . exists y . exists a . agent(a, y) AND cat(y) AND gloves(x) AND observed(a) AND patient(a, x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cat", "vp1": "observed", "np2": "gloves"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a woman held each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND held(a) AND patient(a, x) AND telescope(x) AND woman(y)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "woman", "vp1": "held", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a man spotted each elephant", "lf": "forall x . exists y . exists a . agent(a, y) AND elephant(x) AND man(y) AND patient(a, x) AND spotted(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "man", "vp1": "spotted", "np2": "elephant"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow picked up every crayon", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND crayon(x) AND patient(a, x) AND picked_up(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "picked_up", "np2": "crayon"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a bird spotted each telescope", "lf": "forall x . exists y . exists a . agent(a, y) AND bird(y) AND patient(a, x) AND spotted(a) AND telescope(x)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "bird", "vp1": "spotted", "np2": "telescope"}, "template_idx": 1, "type": "scope_reverse"}
{"surface": "a cow spied every cup", "lf": "forall x . exists y . exists a . agent(a, y) AND cow(y) AND cup(x) AND patient(a, x) AND spied(a)", "unfilled_template": "forall x . exists y . exists a . {np1}(y) AND {np2}(x) AND {vp1}(a) AND agent(a, y) AND patient(a, x)", "template_tags": [null, "np1", "vp1", null, "np2"], "var_bindings": {"np1": "cow", "vp1": "spied", "np2": "cup"}, "template_idx": 1, "type": "scope_reverse"}
